<?php
bolt_decrypt( __FILE__ , 'p0gy4D'); return 0;
##!!!##