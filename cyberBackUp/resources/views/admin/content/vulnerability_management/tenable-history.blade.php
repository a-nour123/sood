@extends('admin/layouts/contentLayoutMaster')

@section('title', __('vulnerability.VulnerabilityManagement'))

@section('vendor-style')
    <link rel="stylesheet" href="{{ asset('fonts/fontawesome-6.2.1/css/all.min.css') }}">
    <link rel="stylesheet" href="{{ asset(mix('vendors/css/extensions/toastr.min.css')) }}">
    <link rel="stylesheet" href="{{ asset(mix('vendors/css/tables/datatable/dataTables.bootstrap5.min.css')) }}">
    <link rel="stylesheet" href="{{ asset(mix('vendors/css/tables/datatable/responsive.bootstrap5.min.css')) }}">

    <link rel="stylesheet" href="{{ asset(mix('vendors/css/tables/datatable/buttons.bootstrap5.min.css')) }}">
    <link rel="stylesheet" href="{{ asset(mix('vendors/css/forms/select/select2.min.css')) }}">
    <link rel="stylesheet" href="{{ asset(mix('vendors/css/animate/animate.min.css')) }}">
    <link rel="stylesheet" href="{{ asset(mix('vendors/css/extensions/sweetalert2.min.css')) }}">
    <link rel="stylesheet" href="{{ asset(mix('vendors/css/pickers/flatpickr/flatpickr.min.css')) }}">
    <link rel="stylesheet" type="text/css" href="{{ asset('css/base/plugins/forms/pickers/form-flat-pickr.css') }}">
    <link rel="stylesheet" href="{{ asset(mix('css/base/plugins/forms/pickers/form-flat-pickr.css')) }}">
@endsection

@section('page-style')
    <link rel="stylesheet" href="{{ asset(mix('css/base/plugins/extensions/ext-component-toastr.css')) }}">
    <link rel="stylesheet" href="{{ asset(mix('css/base/plugins/extensions/ext-component-sweet-alerts.css')) }}">
@endsection
@section('content')

    <div class="row">
        <div class="container">
            <!-- Filter Section -->
            <div class="card">
                <div class="card-body">

                    <div class="filter-section row">
                        <!-- Filter Type Selector -->
                        <div class="filter-type-selector col-6">
                            <label for="filter_type">{{ __('locale.Select Filter Type') }}</label>
                            <select id="filter_type" class="form-control">
                                <option value="region">{{ __('locale.Filter by Region') }}</option>
                                <option value="asset">{{ __('locale.Filter by Asset') }}</option>
                            </select>
                        </div>

                        <!-- Region Filter -->
                        <div id="region_filter" class="filter-option col-6" style="display: none;">
                            <label for="region">{{ __('locale.Select Region') }}</label>
                            <select id="region" class="form-control">
                                <option value="">{{ __('locale.Select Region') }}</option>
                                @foreach ($regions as $region)
                                    <option value="{{ $region->id }}">{{ $region->name }}</option>
                                @endforeach
                            </select>
                        </div>

                        <!-- Asset Filter -->
                        <div id="asset_filter" class="filter-option col-6">
                            <label for="asset">{{ __('locale.Select Asset') }}</label>
                            <select id="asset" class="form-control">
                                <option value="">{{ __('locale.Select Asset') }}</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br>
    <br>
    <div style="display: flex; justify-content: space-around; align-items: center;">
        <div id="vulnHistoryChart" style="height: 400px; width: 48%;"></div>
        <div id="vulnPieChart" style="height: 400px; width: 48%;"></div>
    </div>
    <div style="display: flex; justify-content: space-around; align-items: center;">
        <div id="vulnHistoryAssetChart" style="height: 400px; width: 48%;"></div>
        <div id="vulnAssetPieChart" style="height: 400px; width: 48%;"></div>
    </div>



@endsection

@section('vendor-script')
    <script src="{{ asset(mix('vendors/js/tables/datatable/jquery.dataTables.min.js')) }}"></script>
    <script src="{{ asset(mix('vendors/js/tables/datatable/dataTables.bootstrap5.min.js')) }}"></script>
    <script src="{{ asset(mix('vendors/js/tables/datatable/dataTables.responsive.min.js')) }}"></script>
    <script src="{{ asset(mix('vendors/js/tables/datatable/responsive.bootstrap5.js')) }}"></script>
    <script src="{{ asset(mix('vendors/js/tables/datatable/buttons.print.min.js')) }}"></script>
    <script src="{{ asset(mix('vendors/js/tables/datatable/datatables.buttons.min.js')) }}"></script>
    <script src="{{ asset(mix('vendors/js/forms/select/select2.full.min.js')) }}"></script>
    <script src="{{ asset(mix('vendors/js/extensions/sweetalert2.all.min.js')) }}"></script>
    <script src="{{ asset(mix('vendors/js/pickers/flatpickr/flatpickr.min.js')) }}"></script>
@endsection


@section('page-script')
    {{-- <script src="{{ asset(mix('js/scripts/forms/form-select2.js')) }}"></script> --}}
    <script src="{{ asset(mix('vendors/js/extensions/toastr.min.js')) }}"></script>
    <!-- Core Highcharts Library -->
    <script src="{{ asset('cdn/highcharts.js') }}"></script>

    <!-- Exporting and Offline Exporting Modules -->
    <script src="{{ asset('cdn/exporting.js') }}"></script>
    <script src="{{ asset('cdn/offline-exporting.js') }}"></script>
    <!-- Additional Modules (Optional) -->
    <script src="{{ asset('cdn/accessibility.js') }}"></script>
    <script src="{{ asset('cdn/data.js') }}"></script>
    <script src="{{ asset('cdn/export-data.js') }}"></script>
    <script src="{{ asset('cdn/offline-exporting.js') }}"></script>


    <script>
        $(document).ready(function() {
            // Handle the change event for filter type selector
            $('#filter_type').change(function() {
                var filterType = $(this).val();

                // Reset charts and hide all graphs initially
                resetCharts();

                // Show/Hide filters based on selection
                if (filterType == 'region') {
                    $('#region_filter').show();
                    $('#asset_filter').hide();
                    $('#asset').val(''); // Reset asset selection
                    $('#vulnHistoryChart').show(); // Show the region chart
                    $('#vulnHistoryAssetChart').hide(); // Hide the asset chart
                    $('#vulnPieChart').show(); // Show region pie chart
                    $('#vulnAssetPieChart').hide(); // Hide asset pie chart
                } else if (filterType == 'asset') {
                    $('#asset_filter').show();
                    $('#region_filter').hide();
                    $('#region').val(''); // Reset region selection
                    $('#vulnHistoryChart').hide(); // Hide region chart
                    $('#vulnHistoryAssetChart').show(); // Show asset chart
                    $('#vulnPieChart').hide(); // Hide region pie chart
                    $('#vulnAssetPieChart').show(); // Show asset pie chart

                    // Initialize Select2 for asset search (only when asset filter is selected)
                    initSelect2AssetSearch();
                }
            });

            // Function to reset charts and hide them
            function resetCharts() {
                // Clear charts and hide them
                $('#vulnHistoryChart').hide();
                $('#vulnPieChart').hide();
                $('#vulnHistoryAssetChart').hide();
                $('#vulnAssetPieChart').hide();

                // Clear data in charts (use Highcharts clear method)
                if (Highcharts.charts.length > 0) {
                    Highcharts.charts.forEach(function(chart) {
                        if (chart) {
                            chart.destroy(); // Destroy the chart instance to clear data
                        }
                    });
                }
            }

            // Function to initialize Select2 for asset search
            function initSelect2AssetSearch() {
                $('#asset').select2({
                    placeholder: '{{ __('Select Asset') }}',
                    minimumInputLength: 1,
                    ajax: {
                        url: '{{ route('admin.asset_management.ajax.assets') }}', // The route to fetch assets
                        dataType: 'json',
                        delay: 250,
                        data: function(params) {
                            return {
                                q: params.term // Send the search term to the server
                            };
                        },
                        processResults: function(data) {
                            return {
                                results: $.map(data, function(asset) {
                                    return {
                                        id: asset.id,
                                        text: asset.name
                                    };
                                })
                            };
                        },
                        cache: true
                    }
                });
            }

            // Trigger change event to initialize the view correctly
            $('#filter_type').trigger('change'); // Initial trigger when the page loads

            // Handle Region filter selection
            $('#region').change(function() {
                var regionId = $(this).val();

                if (regionId) {
                    $.ajax({
                        url: '{{ route('admin.vulnerability_management.regionHistory') }}',
                        method: 'GET',
                        data: {
                            region_id: regionId
                        },
                        success: function(data) {
                            // Draw the region-related charts
                            drawRegionCharts(data);
                        },
                        error: function() {
                            console.error('Failed to fetch region data.');
                        }
                    });
                }
            });

            // Handle Asset filter selection
            $('#asset').change(function() {
                var assetId = $(this).val();

                if (assetId) {
                    $.ajax({
                        url: '{{ route('admin.vulnerability_management.assetHistory') }}', // Route to assetHistory
                        method: 'GET',
                        data: {
                            asset_id: assetId
                        },
                        success: function(data) {
                            // Draw the asset-related charts
                            drawAssetCharts(data);
                        },
                        error: function() {
                            console.error('Failed to fetch asset data.');
                        }
                    });
                }
            });

            // Function to draw Region-related charts
            function drawRegionCharts(data) {
                // Region Line Chart
                Highcharts.chart('vulnHistoryChart', {
                    chart: {
                        type: 'line'
                    },
                    title: {
                        text: `Mitigated Vulnerability Severity Trends (Last 4 Months) for ${data.regionsName}`
                    },
                    xAxis: {
                        categories: data.months,
                        title: {
                            text: 'Month'
                        },
                        labels: {
                            rotation: -45
                        }
                    },
                    yAxis: {
                        title: {
                            text: 'Number of Vulnerabilities'
                        },
                        min: 0
                    },
                    tooltip: {
                        shared: true,
                        valueSuffix: ' vulnerabilities'
                    },
                    series: [{
                            name: 'Critical',
                            data: data.critical,
                            color: 'rgb(192, 0, 0 , 0.6)',
                            lineWidth: 3
                        },
                        {
                            name: 'High',
                            data: data.high,
                            color: 'rgb(255, 192, 0)',
                            lineWidth: 3
                        },
                        {
                            name: 'Medium',
                            data: data.medium,
                            color: 'rgb(0, 176, 80)',
                            lineWidth: 3
                        },
                        {
                            name: 'Low',
                            data: data.low,
                            color: 'rgb(0, 112, 192)',
                            lineWidth: 3
                        }
                    ]
                });

                // Region Pie Chart
                Highcharts.chart('vulnPieChart', {
                    chart: {
                        type: 'pie'
                    },
                    title: {
                        text: `Mitigated Vulnerability Severity Distribution (Last Month) for ${data.regionsName}`
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.2f}%</b><br>Total: {point.y}'
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                format: '<b>{point.name}</b>: {point.y} ({point.percentage:.1f}%)'
                            }
                        }
                    },
                    series: [{
                        name: 'Vulnerabilities',
                        colorByPoint: true,
                        data: [{
                                name: 'Critical',
                                y: data.totalsLastMonth.critical,
                                color: 'rgb(192, 0, 0 , 0.6)'
                            },
                            {
                                name: 'High',
                                y: data.totalsLastMonth.high,
                                color: 'rgb(255, 192, 0)'
                            },
                            {
                                name: 'Medium',
                                y: data.totalsLastMonth.medium,
                                color: 'rgb(0, 176, 80)'
                            },
                            {
                                name: 'Low',
                                y: data.totalsLastMonth.low,
                                color: 'rgb(0, 112, 192)'
                            }
                        ]
                    }]
                });
            }


            // Function to draw Asset-related charts
            function drawAssetCharts(data) {
                // Asset Bar Chart
                Highcharts.chart('vulnHistoryAssetChart', {
                    chart: {
                        type: 'bar'
                    },
                    title: {
                        text: `Vulnerability Status Trends (Last 4 Months) for ${data.assetName}`
                    },
                    xAxis: {
                        categories: data.months,
                        title: {
                            text: 'Month'
                        },
                        labels: {
                            rotation: -45
                        }
                    },
                    yAxis: {
                        title: {
                            text: 'Number of Vulnerabilities'
                        },
                        min: 0
                    },
                    tooltip: {
                        shared: true,
                        valueSuffix: ' vulnerabilities'
                    },
                    series: [{
                            name: 'Open',
                            data: data.open,
                            color: 'rgb(192, 0, 0, 0.6)',
                            lineWidth: 3
                        },
                        {
                            name: 'Closed',
                            data: data.closed,
                            color: 'rgb(0, 176, 80)',
                            lineWidth: 3
                        }
                    ]
                });

                Highcharts.chart('vulnAssetPieChart', {
                    chart: {
                        type: 'pie'
                    },
                    title: {
                        text: `Mitigated Vulnerability Severity Distribution (Last Month) for ${data.assetName}`
                    },
                    tooltip: {
                        pointFormat: '{series.name}: <b>{point.percentage:.2f}%</b><br>Total: {point.y}'
                    },
                    plotOptions: {
                        pie: {
                            allowPointSelect: true,
                            cursor: 'pointer',
                            dataLabels: {
                                enabled: true,
                                format: '<b>{point.name}</b>: {point.y} ({point.percentage:.1f}%)'
                            }
                        }
                    },
                    series: [{
                        name: 'Vulnerabilities',
                        colorByPoint: true,
                        data: [{
                                name: 'Critical',
                                y: data.severity.critical,
                                color: 'rgb(192, 0, 0 , 0.6)'
                            },
                            {
                                name: 'High',
                                y: data.severity.high,
                                color: 'rgb(255, 192, 0)'
                            },
                            {
                                name: 'Medium',
                                y: data.severity.medium,
                                color: 'rgb(0, 176, 80)'
                            },
                            {
                                name: 'Low',
                                y: data.severity.low,
                                color: 'rgb(0, 112, 192)'
                            }
                        ]
                    }]
                });

            }

        });
    </script>


@endsection
