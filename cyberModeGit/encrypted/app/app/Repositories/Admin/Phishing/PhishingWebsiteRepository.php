<?php
bolt_decrypt( __FILE__ , 'FVh9aj'); return 0;
##!!!##