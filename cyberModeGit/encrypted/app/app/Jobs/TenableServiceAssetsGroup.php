<?php
bolt_decrypt( __FILE__ , 'tT2QXT'); return 0;
##!!!##